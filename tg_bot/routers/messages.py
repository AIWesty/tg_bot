#–í –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ request - —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è http –∑–∞–ø—Ä–æ—Å–æ–≤
#–û–¥–Ω–∞–∫–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ –º—ã —Ç–∞–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ aiogram
#–°–æ–≤–º–µ—â–∞—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –ø–ª–æ—Ö–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π, –Ω–æ —ç—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö
#–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏(–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å aiohttp)

from pathlib import Path
from aiogram import Router, F
from aiogram.types import Message, Location, Voice
from keyboards.reply import main_keyboard
from utils.logger import log_errors, log_message
from utils.speech import speech_to_text  #–º–æ–¥—É–ª—å —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞
import requests
import os


router = Router()

@router.message(F.text.lower() == '–∫–æ—Ç–∞!')
async def send_cat(message: Message) -> None: #—Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–∞!(—Ä–∞–∑–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
    
    cat_api_url = 'https://api.thecatapi.com/v1/images/search' #url –∑–∞–ø—Ä–æ—Å–∞ –∫ –∞–ø–∏ —Å–∞–π—Ç–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
    response = requests.get(cat_api_url).json() # –≥–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ url, –ø–∞—Ä—Å–∏—Ç Json –æ—Ç–≤–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä—å
    cat_url = response[0]['url'] #—Å–∞–π—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—ã–¥–∞–µ—Ç –Ω–µ —Å—Ä–∞–∑—É –∫–∞—Ä—Ç–∏–Ω–∫—É –∞ json –æ—Ç–≤–µ—Ç —Å–æ —Å–ª–æ–≤–∞—Ä–µ–º, –º—ã –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–µ–º—É –ø–æ –∫–ª—é—á—É url, –≤—ã—Ç–∞—Å–∫–∏–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫—É
    
    if message.from_user is None: # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ from_user
            await message.answer(cat_url, caption="–í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫! üê±") 
            return
    user = message.from_user
        
    log_message(user.id, f'–í—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É (–∫–æ—Ç–∞!))') #–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    
    await message.answer_photo(cat_url, caption="–í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫! üê±") 
    
    

@router.message(F.text.lower() == '–ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É')
async def send_weather_menu(message: Message) -> None:  #–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É
    from keyboards.inline import weather_keyboard  #–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    if message.from_user is None:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=weather_keyboard())
        return
    user = message.from_user
    
    log_message(user.id, f'–í—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É (–ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É)')
    
    #–æ—Ç–≤–µ—á–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–≥–æ–¥–æ–π
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=weather_keyboard())


@router.message(F.voice)
async def handle_voice(message: Message) -> None:
    os.makedirs("temp", exist_ok=True)
    
    if not message.voice or not message.from_user or not message.bot: #–ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ voice, user –∏ bot 
        await message.answer("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è")
        return
    
    user = message.from_user
    
    
    try:
        voice_file = await message.bot.get_file(message.voice.file_id)
        if not voice_file.file_path: 
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É")
            return
            
        voice_path = f"temp/voice_{message.from_user.id}.ogg" #—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        await message.bot.download_file(voice_file.file_path, voice_path) #–∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –≥—Å(–æ—Ç–∫—É–¥–∞, –∫—É–¥–∞)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥
        print(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {voice_path}, —Ä–∞–∑–º–µ—Ä: {os.path.getsize(voice_path)} –±–∞–π—Ç")
        
        text = speech_to_text(voice_path)
        print(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: '{text}'")
        
        if text:
            await message.answer(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")
        else:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ")
    finally:
        if os.path.exists(voice_path):
            os.remove(voice_path)
    
    log_message(user.id, f'–í—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)')