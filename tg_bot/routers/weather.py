from aiogram import Router
from aiogram.types import CallbackQuery
from aiogram import F
from utils.logger import logger
from utils.config import load_config
from utils.fallbacks import fallback
import requests

router = Router() 

@router.callback_query(F.data.startswith('city_')) #–¥–µ–ª–∞–µ–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback  –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç —Ç–≥
async def send_weather(callback: CallbackQuery) -> None:
    if not callback.data or not callback.message: 
        return
    
    try:
    
        city = callback.data.split('_')[1] #–∏–∑ –ø—Ä–∏—à–µ–¥—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤—ã–±–∏—Ä–∞–µ–º –≥–æ—Ä–æ–¥(–ø—Ä–∏–º–µ—Ä: city_Moscow)
        
        config = load_config() # –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        
        api_key = config.weather.api_key # –±–µ—Ä–µ–º –∞–ø–∏ –∫–ª—é—á —Å –∫–æ–Ω—Ñ–∏–≥–∞
        
        url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric&lang=ru'
        print(f"Request URL: {url}")
        
        response = requests.get(url, timeout=5).json() #–∑–∞–ø—Ä–æ—Å –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            
        
        if response.get('cod') != 200:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
            error_msg = response.get('message', 'Unknown error')
            print(f"API error: {error_msg}")
            await callback.message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É üòï\n–û—à–∏–±–∫–∞: {error_msg}")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        weather_data = {
            'temp': response['main']['temp'],
            'wind': response['wind']['speed'],
            'clouds': response['clouds']['all']
        }
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
        fallback.update_weather_cache(
            city=city,
            temperature=f"{weather_data['temp']}¬∞C",
            wind=f"{weather_data['wind']} –º/—Å",
            clouds=f"{weather_data['clouds']}%"
        )
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response_text = (
            f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temp']}¬∞C\n"
            f"üí® –í–µ—Ç–µ—Ä: {weather_data['wind']} –º/—Å\n"
            f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {weather_data['clouds']}%"
        )
        
        await callback.message.answer(response_text)
        await callback.answer()
        logger.log_message(callback.from_user.id, f'–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city}')
    
    except IndexError:
        await callback.message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
        logger.log_error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback –¥–∞–Ω–Ω—ã—Ö", user_id=callback.from_user.id)
    
    except requests.exceptions.RequestException as e:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞
        cached_response = fallback.get_weather_fallback(city)
        if cached_response:
            await callback.message.answer(cached_response + "\n(–¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏)")
            logger.log_message(callback.from_user.id, f'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è {city}')
        else:
            await callback.message.answer("–°–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            logger.log_error(f'–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã: {str(e)}', user_id=callback.from_user.id)
    
    except Exception as e:
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
        logger.log_error(f'–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –ø–æ–≥–æ–¥—ã: {str(e)}', user_id=callback.from_user.id)